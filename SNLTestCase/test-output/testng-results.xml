<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="7" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="168" started-at="2018-07-02T06:10:26Z" finished-at="2018-07-02T06:10:26Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="168" started-at="2018-07-02T06:10:26Z" finished-at="2018-07-02T06:10:26Z">
      <class name="SNL.SNLTestCase.BoardTest">
        <test-method status="PASS" signature="maxPlayer_test()[pri:0, instance:SNL.SNLTestCase.BoardTest@1579e0f]" name="maxPlayer_test" duration-ms="56" started-at="2018-07-02T06:10:26Z" finished-at="2018-07-02T06:10:26Z">
          <exception class="SNL.SNLTestCase.MaxPlayersReachedExeption">
            <message>
              <![CDATA[The board already has maximum allowed Player: 4]]>
            </message>
            <full-stacktrace>
              <![CDATA[SNL.SNLTestCase.MaxPlayersReachedExeption: The board already has maximum allowed Player: 4
at SNL.SNLTestCase.Board.registerPlayer(Board.java:39)
at SNL.SNLTestCase.BoardTest.maxPlayer_test(BoardTest.java:32)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- SNL.SNLTestCase.MaxPlayersReachedExeption -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- maxPlayer_test -->
        <test-method status="PASS" signature="nameRedundancy_test()[pri:0, instance:SNL.SNLTestCase.BoardTest@1579e0f]" name="nameRedundancy_test" duration-ms="8" started-at="2018-07-02T06:10:26Z" finished-at="2018-07-02T06:10:26Z">
          <exception class="SNL.SNLTestCase.PlayerExistsException">
            <message>
              <![CDATA[Player 'Rahul' already exists on board]]>
            </message>
            <full-stacktrace>
              <![CDATA[SNL.SNLTestCase.PlayerExistsException: Player 'Rahul' already exists on board
at SNL.SNLTestCase.Board.registerPlayer(Board.java:44)
at SNL.SNLTestCase.BoardTest.nameRedundancy_test(BoardTest.java:20)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- SNL.SNLTestCase.PlayerExistsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameRedundancy_test -->
        <test-method status="FAIL" signature="playerNotExist_test()[pri:0, instance:SNL.SNLTestCase.BoardTest@1579e0f]" name="playerNotExist_test" duration-ms="19" started-at="2018-07-02T06:10:26Z" finished-at="2018-07-02T06:10:26Z">
          <exception class="org.json.JSONException">
            <message>
              <![CDATA[JSONObject["uuid"] not a string.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.json.JSONException: JSONObject["uuid"] not a string.
at org.json.JSONObject.getString(JSONObject.java:721)
at SNL.SNLTestCase.Board.deletePlayer(Board.java:66)
at SNL.SNLTestCase.BoardTest.playerNotExist_test(BoardTest.java:68)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.json.JSONException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- playerNotExist_test -->
        <test-method status="PASS" signature="position_test()[pri:0, instance:SNL.SNLTestCase.BoardTest@1579e0f]" name="position_test" duration-ms="11" started-at="2018-07-02T06:10:26Z" finished-at="2018-07-02T06:10:26Z">
          <exception class="SNL.SNLTestCase.GameInProgressException">
            <message>
              <![CDATA[New player cannot join since the game has started]]>
            </message>
            <full-stacktrace>
              <![CDATA[SNL.SNLTestCase.GameInProgressException: New player cannot join since the game has started
at SNL.SNLTestCase.Board.registerPlayer(Board.java:47)
at SNL.SNLTestCase.BoardTest.position_test(BoardTest.java:45)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- SNL.SNLTestCase.GameInProgressException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- position_test -->
        <test-method status="PASS" signature="registerPlayer_test()[pri:0, instance:SNL.SNLTestCase.BoardTest@1579e0f]" name="registerPlayer_test" duration-ms="7" started-at="2018-07-02T06:10:26Z" finished-at="2018-07-02T06:10:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerPlayer_test -->
        <test-method status="PASS" signature="turn_test()[pri:0, instance:SNL.SNLTestCase.BoardTest@1579e0f]" name="turn_test" duration-ms="8" started-at="2018-07-02T06:10:26Z" finished-at="2018-07-02T06:10:26Z">
          <exception class="SNL.SNLTestCase.InvalidTurnException">
            <message>
              <![CDATA[Player 'aeef6ed3-5a24-4598-be43-ab06190b617a' does not have the turn]]>
            </message>
            <full-stacktrace>
              <![CDATA[SNL.SNLTestCase.InvalidTurnException: Player 'aeef6ed3-5a24-4598-be43-ab06190b617a' does not have the turn
at SNL.SNLTestCase.Board.rollDice(Board.java:119)
at SNL.SNLTestCase.BoardTest.turn_test(BoardTest.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- SNL.SNLTestCase.InvalidTurnException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- turn_test -->
        <test-method status="PASS" signature="validRoll_test()[pri:0, instance:SNL.SNLTestCase.BoardTest@1579e0f]" name="validRoll_test" duration-ms="9" started-at="2018-07-02T06:10:26Z" finished-at="2018-07-02T06:10:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validRoll_test -->
      </class> <!-- SNL.SNLTestCase.BoardTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
